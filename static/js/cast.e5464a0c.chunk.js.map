{"version":3,"file":"static/js/cast.e5464a0c.chunk.js","mappings":"2NAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCN,EADnC,sDAGFO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIA,EAAKP,QAClBI,KAAKH,KACP,CAACJ,IAEJW,QAAQC,IAAIT,IAGV,0BACE,wBACGA,GACCA,EAAKU,KAAI,SAAAC,GAAE,OACT,0BACGA,EAAGC,cACF,gBACEC,IAAG,yCAAoCF,EAAGC,cAC1CE,IAAKH,EAAGI,KACRC,MAAO,OAGT,gBACEH,IACE,6FAEFC,IAAK,YACLE,MAAO,OAGX,uBAAIL,EAAGI,QACP,uCAAeJ,EAAGM,UAAUC,MAAM,gBAjB3BP,EAAGQ","sources":["components/CastReviews/Cast.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=070151ea430b4e74dbca9bca592b262c`,\n    )\n      .then(response => response.json())\n      .then(data => data.cast)\n      .then(setCast);\n  }, [movieId]);\n\n  console.log(cast);\n\n  return (\n    <div>\n      <ul>\n        {cast &&\n          cast.map(el => (\n            <li key={el.id}>\n              {el.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${el.profile_path}`}\n                  alt={el.name}\n                  width={100}\n                />\n              ) : (\n                <img\n                  src={\n                    'https://icon-library.com/images/no-picture-available-icon/no-picture-available-icon-20.jpg'\n                  }\n                  alt={'No poster'}\n                  width={100}\n                />\n              )}\n              <p>{el.name}</p>\n              <p>Character: {el.character.split('(voice)')}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\nCast.propTypes = {\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    }),\n  ),\n};\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetch","then","response","json","data","console","log","map","el","profile_path","src","alt","name","width","character","split","id"],"sourceRoot":""}