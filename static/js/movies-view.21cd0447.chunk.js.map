{"version":3,"file":"static/js/movies-view.21cd0447.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Search/Search.js","../node_modules/nanoid/index.browser.js","views/MoviesPage.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { PropTypes } from 'prop-types';\n\nexport default function Search({ onSubmit }) {\n  const movieNameId = nanoid();\n  const [keyWord, setKeyWord] = useState('');\n\n  const handleChange = event => {\n    setKeyWord(event.currentTarget.value.trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (keyWord) {\n      onSubmit(keyWord);\n      reset();\n    }\n  };\n\n  const reset = e => {\n    setKeyWord('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={movieNameId}>\n        Film Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={keyWord}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          id={movieNameId}\n        />\n      </label>\n      <button type=\"submit\" onClick={handleSubmit}>\n        Search\n      </button>\n    </form>\n  );\n}\nSearch.propTypes = {\n  onSubmit: PropTypes.func,\n  onClick: PropTypes.func,\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from 'react-router-dom';\r\nimport Search from '../components/Search/Search';\r\n\r\nexport default function MoviesPage({ onSubmit }) {\r\n  const [movieName, setMovieName] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams(undefined);\r\n \r\n    const searched=searchParams.get('query');\r\n\r\n  \r\n  console.log(query)\r\n  useEffect(() => {\r\n    if (searched === null) {\r\n      console.log('popa')\r\n      return;\r\n    }\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?query=${searched}&api_key=070151ea430b4e74dbca9bca592b262c`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {  \r\n        if (data.results.length > 0) {\r\n        setMovieName(data.results);\r\n        setError(false)\r\n        return\r\n      }\r\n      throw Error();\r\n      })\r\n      .catch(error=>{\r\n        setError(true)\r\n      })\r\n    \r\n  }, [searched]);\r\n\r\n  const handleFormSubmit = keyWord => {\r\n    setQuery(keyWord);\r\n    navigate({ ...location, search: `query=${keyWord}` });\r\n  };\r\n  console.log(movieName)\r\n  console.log(query)\r\n  console.log(searched)\r\n  return (\r\n    <div>\r\n      <Search onSubmit={handleFormSubmit} />\r\n      <ul>\r\n        {movieName&&!error&&\r\n          movieName.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}\r\n              state={{from:location}}\r\n              >\r\n                {movie.original_name}\r\n                {movie.original_title}{' '}\r\n              </Link>\r\n            </li>\r\n            ))}\r\n      </ul>\r\n      {error&&(<h1>This film it`s not found</h1>)}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Search","onSubmit","movieNameId","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","useState","keyWord","setKeyWord","handleSubmit","e","preventDefault","reset","htmlFor","type","name","autoComplete","autoFocus","placeholder","onChange","event","currentTarget","trim","pattern","title","onClick","MoviesPage","movieName","setMovieName","query","setQuery","error","setError","location","useLocation","navigate","useNavigate","useSearchParams","undefined","searchParams","searched","get","console","log","useEffect","fetch","then","response","json","data","results","Error","catch","search","map","movie","to","state","from","original_name","original_title"],"sourceRoot":""}